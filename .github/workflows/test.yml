on: [push]

name: CI

jobs:
  build_and_test:
    name: Rust project
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            rust: stable
            target: x86_64-unknown-linux-gnu
            bin: git-workspace
            name: git-workspace-Linux-x86_64.tar.gz
          - os: macOS-latest
            rust: stable
            target: x86_64-apple-darwin
            bin: git-workspace
            name: git-workspace-Darwin-x86_64.tar.gz
          - os: windows-latest
            rust: stable
            target: x86_64-pc-windows-msvc
            bin: git-workspace.exe
            name: git-workspace-Windows-x86_64.zip
    env:
      GIT_WORKSPACE: ${{github.workspace}}/workspace-test-dir/
      GITLAB_TOKEN: ${{ secrets.GITLAB_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GCM_INTERACTIVE: never
      GIT_TERMINAL_PROMPT: 0
      RUST_BACKTRACE: "1"
    steps:
      - uses: actions/checkout@master
      - name: Switch SSH to https
        shell: bash
        run: |
          git config --global url."https://gitlab.com/".insteadOf git@gitlab.com:
          git config --global url."https://".insteadOf git://
          if [[ "${{ matrix.os }}" == "windows-latest" ]]
          then
            git config --global credential.helper wincred
          fi
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
          target: ${{ matrix.target }}
      - name: Cache debug build
        uses: actions/cache@v1
        with:
          key: development-${{ matrix.os }}
          path: target/debug
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
      - name: git-workspace add gitlab user
        uses: actions-rs/cargo@v1
        with:
          command: run
          args: add gitlab user tom6
      - name: git-workspace add gitlab group
        uses: actions-rs/cargo@v1
        with:
          command: run
          args: add gitlab group gitlab-org
      - name: git-workspace update
        uses: actions-rs/cargo@v1
        with:
          command: run
          args: update
      - name: git-workspace fetch
        uses: actions-rs/cargo@v1
        with:
          command: run
          args: fetch
      - name: git-workspace list
        uses: actions-rs/cargo@v1
        with:
          command: run
          args: list
      - name: Remove workspace
        shell: bash
        run: |
          rm ${GIT_WORKSPACE}/workspace.toml
      - name: archive everything
        uses: actions-rs/cargo@v1
        with:
          command: run
          args: update
      - name: Cache release build
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/cache@v1
        with:
          key: production-${{ matrix.os }}
          path: target/release
      - name: Build release
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}
      - name: Package
        if: startsWith(github.ref, 'refs/tags/')
        shell: bash
        run: |
          strip target/${{ matrix.target }}/release/${{ matrix.bin }}
          cd target/${{ matrix.target }}/release
          if [[ "${{ matrix.os }}" == "windows-latest" ]]
          then
          7z a ../../../${{ matrix.name }} ${{ matrix.bin }}
          else
          tar czvf ../../../${{ matrix.name }} ${{ matrix.bin }}
          fi
          cd -
      - name: Publish
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          draft: false
          files: 'git-workspace*'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
